apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-admin
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: k8s-admin
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-cloud-kubernetes-demo
  namespace: default
spec:
  revisionHistoryLimit: 3
  replicas: 1
  selector:
    matchLabels:
      app: spring-cloud-kubernetes-demo
  template:
    metadata:
      labels:
        app: spring-cloud-kubernetes-demo
    spec:
      serviceAccountName: k8s-admin
      containers:
        - name: spring-cloud-kubernetes-demo
          image: javawiki/spring-cloud-kubernetes-demo:v1.0.0
          imagePullPolicy: IfNotPresent
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: test
          ports:
            - containerPort: 8701
              name: http-usi
            - containerPort: 8700
              name: http-usp
---
apiVersion: v1
kind: Service
metadata:
  name: sckd-user-service-invoker
  namespace: default
spec:
  selector:
    app: spring-cloud-kubernetes-demo
  ports:
    - protocol: TCP
      name: http
      nodePort: 30101
      port: 8701
      targetPort: 8701
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: sckd-user-service-provider
  namespace: default
spec:
  selector:
    app: spring-cloud-kubernetes-demo
  ports:
    - protocol: TCP
      name: http
      nodePort: 30102
      port: 8700
      targetPort: 8700
  type: NodePort
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: sckd-user-service-provider
  namespace: default
data:
  application.yaml: |-
    usp:
      desc: about user-service-provider service
    ---
    spring:
      profiles: test
    greeting:
      message: 1
    ---
  single-key: single value
---